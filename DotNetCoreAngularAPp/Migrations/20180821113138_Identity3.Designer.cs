// <auto-generated />
using System;
using DotNetCoreAngularApp.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNetCoreAngularApp.Migrations
{
    [DbContext(typeof(ForeCastContext))]
    [Migration("20180821113138_Identity3")]
    partial class Identity3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetCoreAngularApp.Model.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ZipCode");

                    b.HasKey("CityId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Cities");

                    b.HasData(
                        new { CityId = 1, Name = "MDZ", ZipCode = 5500 },
                        new { CityId = 2, Name = "BCN", ZipCode = 8001 }
                    );
                });

            modelBuilder.Entity("DotNetCoreAngularApp.Model.WeatherForecast", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DateFormatted");

                    b.Property<string>("Summary");

                    b.Property<int>("TemperatureC");

                    b.HasKey("Name");

                    b.ToTable("WeatherForecast");

                    b.HasData(
                        new { Name = "MDZ", Summary = "Templado", TemperatureC = 25 },
                        new { Name = "BCN", Summary = "Fresco", TemperatureC = 15 }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser<Guid>");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser<Guid>");
                });

            modelBuilder.Entity("DotNetCoreAngularApp.Model.ForeCastUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>");

                    b.Property<string>("Password");

                    b.ToTable("ForeCastUser");

                    b.HasDiscriminator().HasValue("ForeCastUser");
                });

            modelBuilder.Entity("DotNetCoreAngularApp.Model.City", b =>
                {
                    b.HasOne("DotNetCoreAngularApp.Model.WeatherForecast")
                        .WithOne("City")
                        .HasForeignKey("DotNetCoreAngularApp.Model.City", "Name");
                });
#pragma warning restore 612, 618
        }
    }
}
